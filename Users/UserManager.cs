using System.Collections.Generic;
using Rooms;

namespace Users
{
    internal class UserManager
    // Class to Manage the Users Dictionary (generated by UserGenerator)
    {
        private Dictionary<string, User> Users { get; set; }
        private RoomManager RoomManager { get; set; }

        public UserManager()
        {
            // statically call UserGenerator to generate the five users needed to populate a server
            this.Users = UserGenerator.GenerateUsers();
            this.RoomManager = new RoomManager();
        }

        // returns a boolean just in case extra error checking is required down the track
        public bool CreateNewUser(string username)
        {
            if (Users.ContainsKey(username))
            {
                return false;
            }

            User User = new User(username);


            Users.Add(username, User);
            return true;
        }
        // The function calling Logout should check whether the user calling it is actually logged in
        public void Logout(string username)
        {
            if (Users.ContainsKey(username))
            {
                Users.Remove(username);
            }
        }

        public void JoinRoom(string username, string roomname)
        {
            User currentUser = Users[username];
            Room room = RoomManager.RoomsList[roomname];

            if (InRoom(currentUser, room))
            {
                room.Users.Add(username);
                currentUser.Rooms.Add(room);
            }
        }

        public void LeaveRoom(string username, string roomname)
        {
            User currentUser = Users[username];
            Room room = GetRoomByName(roomname);

            if (InRoom(currentUser, room))
            {
                currentUser.Rooms.Remove(room);
                room.Users.Remove(username);
            }
        }

        private bool InRoom(User user, Room room)
        {

            List<Room> userRoomsList = user.Rooms;

            if (room != null && userRoomsList.Contains(room))
            {
                return true;
            }
            else
            {
                return false;
            }

        }

        private Room GetRoomByName(string name)
        {
            return RoomManager.RoomsList[name];
        }
    }
}
